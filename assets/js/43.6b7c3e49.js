(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{529:function(t,a,s){"use strict";s.r(a);var n=s(4),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("关于 API 加解密前面已经写了四篇日志：：")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://blog.fengxiuge.top/2021/2021-01-13-api-encrypt.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("一个前后分离的 API 签名和请求参数加解密构思"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.fengxiuge.top/2021/2021-01-15-api-encrypt-java.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RAS+AES混合加密Java端实现"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.fengxiuge.top/2021/2021-01-15-api-encrypt-vue.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RAS+AES混合加密Vue端实现"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.fengxiuge.top/2021/2021-01-15-api-encrypt-mp.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RAS+AES混合加密小程序端实现"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("这里是番外篇，"),s("strong",[t._v("造个轮子：开箱即用的 API 安全组件")])]),t._v(" "),s("p",[t._v("前面第二篇："),s("a",{attrs:{href:"https://blog.fengxiuge.top/2021/2021-01-15-api-encrypt-java.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RAS+AES混合加密Java端实现"),s("OutboundLink")],1),t._v(" 已经把 API 加解密的 Java 端功能基本都实现了。")]),t._v(" "),s("p",[t._v("但是在其他项目用的时候还得 Copy 代码过去，很不方便。所以我就封装了一个 Jar 包，项目需要对 API 进行安全管理的话只需要添加个依赖，application.yml 中加几行配置就 ok 了。下面讲下这个 Jar 包的用法。")]),t._v(" "),s("p",[t._v("组件仓库地址："),s("a",{attrs:{href:"https://github.com/yueyakun/api-security",target:"_blank",rel:"noopener noreferrer"}},[t._v("api-security"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("示例代码已上传："),s("a",{attrs:{href:"https://github.com/yueyakun/my-demo/tree/main/test-api-security",target:"_blank",rel:"noopener noreferrer"}},[t._v("test-api-security"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"引入组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引入组件"}},[t._v("#")]),t._v(" 引入组件")]),t._v(" "),s("h3",{attrs:{id:"pom-文件中引入-jar-包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pom-文件中引入-jar-包"}},[t._v("#")]),t._v(" pom 文件中引入 Jar 包")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.fxg"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("api-security"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.0-SNAPSHOT"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"在-application-yml-中添加如下配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-application-yml-中添加如下配置"}},[t._v("#")]),t._v(" 在 application.yml 中添加如下配置")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("api")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("security")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##总开关")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("check-sign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##是否验证签名和重放请求")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300000")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##请求过期时间")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("show-log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##是否打印日志")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("public-key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMbFUgBEsev1lURtNFgfr0jtz4IDJ6MEyIkA2WMG57bPfSsT4Pei7bxsXUCyMTXQbaxV0SThX802gxrpTEBAbJsCAwEAAQ==\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("private-key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAxsVSAESx6/WVRG00WB+vSO3PggMnowTIiQDZYwbnts99KxPg96LtvGxdQLIxNdBtrFXRJOFfzTaDGulMQEBsmwIDAQABAkEAqG6gM9YCJn5txBP9nQcMU3IgunzN45e0DlQH4aACTac6JHPTZAA1STxdgTosdDBhrC1HA2pPlRzCuCAh3MpvgQIhAOxTENdAAiQPspaFWAvGJZhN767g9LFGUVdabvf0mCC7AiEA11HZRiSpICXO2U1MrYsLrTJMHrQQvCM/mOhW4UullaECIDs/7DX7T04ZPW4tilCRYjWYPKJ8tfyII7ah7rZt9YInAiBSdJSY6OcfWXsp+hEYEDxLegxuYZRbB8COBMNoiXiCoQIgMls9U5YPlGQ3ajDUhFACFIUNpGQl8l2faxPy/yRoV6o=\n")])])]),s("p",[t._v("public-key 和 private-key 没有默认配置，可以通过网站在线生成，也可以直接使用上面的这个示例配置。")]),t._v(" "),s("h3",{attrs:{id:"在启动类上增加-enablesecurity-注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在启动类上增加-enablesecurity-注解"}},[t._v("#")]),t._v(" 在启动类上增加 @EnableSecurity 注解")]),t._v(" "),s("p",[t._v("@EnableSecurity 注解是启动组件的开关注解，必须添加这个注解，相关安全组件才会被注册到系统中。它的主要作用是向spring容器注册下面三个类：")]),t._v(" "),s("ul",[s("li",[t._v("ApiSignFilter：验证签名的过滤器，主要用来解密 AES 秘钥和验证签名")]),t._v(" "),s("li",[t._v("DecryptRequestBodyAdvice：用来解密 RequestBody 的 @ControllerAdvice 类")]),t._v(" "),s("li",[t._v("EncryptResponseBodyAdvice：用来加密 ResponseBody 的 @ControllerAdvice 类")])]),t._v(" "),s("h2",{attrs:{id:"测试签名、加密、解密功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试签名、加密、解密功能"}},[t._v("#")]),t._v(" 测试签名、加密、解密功能")]),t._v(" "),s("h3",{attrs:{id:"测试签名功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试签名功能"}},[t._v("#")]),t._v(" 测试签名功能")]),t._v(" "),s("p",[t._v("在 Controller 中创建一个 Post 方法：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PostMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/sign"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestParam")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestBody")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlogger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"enter sign method,id:{},user:{}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ok"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在 PostMan 中创建一个 Post 请求：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('Params：\nid:99\n\nBody:\n{"id":"99"}\n\nHeaders:\n##时间戳\nX_TIMESTAMP:1613815735447\n##随机字符串\nX_NONCE:1613815735447\n##encryptAesKey,Rsa加密后的Aes秘钥（下面这个的原文是：VuL0fSCfWeQzl7yUcYasqhOLlO80M365）\nX_EAK:Row54E6DJctz4V3OhK3JWj4bmeiOIpZLkq0K8DaHORL7TuflHxwK4Npa6gypcSGH7vh5Zi4mEEor3cR9HlGcgg==\n##签名结果\nX_SIGN:6448020f50ecfbf135a34e9f8b3fa800\n\n注意事项：\n1. 签名结果可以写个 main 方法获取，示例如下：\n\n\tpublic static void main(String[] args) {\n\t\tTreeMap<String, String> params = new TreeMap<>();\n\t\tparams.put("timestamp", "1613815735447");\n\t\tparams.put("nonce", "1613815735447");\n\t\tparams.put("aesKey", "VuL0fSCfWeQzl7yUcYasqhOLlO80M365");\n\t\tparams.put("id", "99");\n\t\tparams.put("body", "{\\"id\\":\\"99\\"}");\n\t\tString sign = SignUtil.sign(params);\n\t\tSystem.out.println(sign);\n\t}\n')])])]),s("p",[t._v("发起请求发现返回了463的状态码，后台也打印出了警告信息："),s("em",[t._v("Timestamp validation failed! requestTime:1613815735447, currentTime:1613963122150,timeOut:30000")])]),t._v(" "),s("p",[t._v("说明请求已经过期了，示例中的时间戳 1613815735447 对应的日期是：2021-02-20 18:08:55，距离现在肯定已经超过 5 分钟了。按照后台提示的 currentTime 时间戳，修改请求头中的 X_TIMESTAMP 值，重新计算签名后发起请求即可。")]),t._v(" "),s("h3",{attrs:{id:"测试加密功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试加密功能"}},[t._v("#")]),t._v(" 测试加密功能")]),t._v(" "),s("p",[t._v("为方便测试可以先将配置项 api.security.check-sign 配置为 false。")]),t._v(" "),s("p",[t._v("在 Controller 中创建以下方法：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Encrypt")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/encrypt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encrypt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tuser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setNickName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"encrypt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tlogger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"enter encrypt method,return user:{}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在 PostMan 创建一个 Get 请求，直接发起请求即可。")]),t._v(" "),s("h3",{attrs:{id:"测试解密功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试解密功能"}},[t._v("#")]),t._v(" 测试解密功能")]),t._v(" "),s("p",[t._v("为方便测试可以先将配置项 api.security.check-sign 配置为 false。")]),t._v(" "),s("p",[t._v("在 Controller 中创建以下方法：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Decrypt")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PostMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/decrypt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decrypt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestBody")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlogger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"enter decrypt method,param user:{}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tuser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tlogger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"enter decrypt method,return user:{}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在 PostMan 创建一个 Post 请求，将测试加密功能时返回的加密结果复制到请求的 body 中，直接发起请求即可。")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("其实在生产中， API 的安全校验也好、数据加解密也好，一般在网关层，基本都是放在一处完成。请求进内部服务的 Controller 前就把这些都做完了，内部服务也不应该关心这些检验和加解密。所以这个组件把解密和加密分别放在 RequestBodyAdvice 和 ResponseBodyAdvice 中，然后用注解来控制的方式有点花架子的意思，，，实际作用不大，但是在个人的单体小项目中和是很好的，很灵活，目前 "),s("a",{attrs:{href:"https://house.fengxiuge.top/",target:"_blank",rel:"noopener noreferrer"}},[t._v("小链家"),s("OutboundLink")],1),t._v(" 和小程序郑房曲线中都采用了这个组件。")])])}),[],!1,null,null,null);a.default=e.exports}}]);